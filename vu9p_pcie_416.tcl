#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# vu9p_pcie_416.tcl: Tcl script for re-creating project 'vu9p_pcie_416'
#
# Generated by Vivado on Thu Jul 07 23:17:26 +0800 2022
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (vu9p_pcie_416.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "$(current_path)/TJPU/sources_1/imports/Yolo_v4_regs_pkg.vhd"
#    "$(current_path)/TJPU/sources_1/imports/Yolo_v4_regs.vhd"
#    "$(current_path)/TJPU/sources_1/imports/dma_idle.v"
#    "$(current_path)/TJPU/sources_1/imports/dma_read.v"
#    "$(current_path)/TJPU/sources_1/imports/dma_read_ctrl.v"
#    "$(current_path)/TJPU/sources_1/imports/dma_write.v"
#    "$(current_path)/TJPU/sources_1/imports/dma_write_idle.v"
#    "$(current_path)/TJPU/sources_1/imports/dma_write_ctrl.v"
#    "$(current_path)/TJPU/sources_1/bd/system/system.bd"
#    "$(current_path)/TJPU/sources_1/ip/Top_switch_end/Top_switch_end.xci"
#    "$(current_path)/TJPU/sources_1/ip/end_reshape/end_reshape.xci"
#    "$(current_path)/TJPU/sources_1/ip/upsampling_fifo_write/upsampling_fifo_write.xci"
#    "$(current_path)/TJPU/sources_1/ip/mult_up/mult_up.xci"
#    "$(current_path)/TJPU/sources_1/ip/upsampling_fifo_1/upsampling_fifo_1.xci"
#    "$(current_path)/TJPU/sources_1/ip/upsampling_fifo_read/upsampling_fifo_read.xci"
#    "$(current_path)/TJPU/sources_1/ip/mult_upsample/mult_upsample.xci"
#    "$(current_path)/TJPU/sources_1/ip/max_polling_fifo_write/max_polling_fifo_write.xci"
#    "$(current_path)/TJPU/sources_1/ip/Buffer_2/Buffer_2.xci"
#    "$(current_path)/TJPU/sources_1/ip/Buffer_1/Buffer_1.xci"
#    "$(current_path)/TJPU/sources_1/ip/route_fifo_write/route_fifo_write.xci"
#    "$(current_path)/TJPU/sources_1/ip/route_fifo_read/route_fifo_read.xci"
#    "$(current_path)/TJPU/sources_1/ip/concat_fifo/concat_fifo.xci"
#    "$(current_path)/TJPU/sources_1/ip/mult_concat/mult_concat.xci"
#    "$(current_path)/TJPU/sources_1/ip/concat_mult_32_u32/concat_mult_32_u32.xci"
#    "$(current_path)/TJPU/sources_1/ip/add_32_u32_32/add_32_u32_32.xci"
#    "$(current_path)/TJPU/sources_1/ip/concat_fifo_read_2/concat_fifo_read_2.xci"
#    "$(current_path)/TJPU/sources_1/ip/concat_fifo_read_1/concat_fifo_read_1.xci"
#    "$(current_path)/TJPU/sources_1/ip/top_reshape/top_reshape.xci"
#    "$(current_path)/TJPU/sources_1/ip/stride_fifo/stride_fifo.xci"
#    "$(current_path)/TJPU/sources_1/ip/zero_point_adder/zero_point_adder.xci"
#    "$(current_path)/TJPU/sources_1/ip/sub_16_u8/sub_16_u8.xci"
#    "$(current_path)/TJPU/sources_1/ip/add_16_u8_16/add_16_u8_16.xci"
#    "$(current_path)/TJPU/sources_1/ip/mult_32_32/mult_32_32.xci"
#    "$(current_path)/TJPU/sources_1/ip/add_32_32/add_32_32.xci"
#    "$(current_path)/TJPU/sources_1/ip/fifo_1024_1024/fifo_1024_1024.xci"
#    "$(current_path)/TJPU/sources_1/ip/count_mult/count_mult.xci"
#    "$(current_path)/TJPU/sources_1/ip/Mult_26_8_34/Mult_26_8_34.xci"
#    "$(current_path)/TJPU/sources_1/ip/mult_8_8_16/mult_8_8_16.xci"
#    "$(current_path)/TJPU/sources_1/ip/Add_34_34/Add_34_34.xci"
#    "$(current_path)/TJPU/sources_1/ip/add_16_16/add_16_16.xci"
#    "$(current_path)/TJPU/sources_1/ip/block_fifo_256_1024/block_fifo_256_1024.xci"
#    "$(current_path)/TJPU/sources_1/ip/COMPUTE_3_3_WEIGHT_INS/COMPUTE_3_3_WEIGHT_INS.xci"
#    "$(current_path)/TJPU/sources_1/ip/bias_ram/bias_ram.xci"
#    "$(current_path)/TJPU/sources_1/ip/count_conv2d/count_conv2d.xci"
#    "$(current_path)/TJPU/sources_1/ip/data_convert_128/data_convert_128.xci"
#    "$(current_path)/TJPU/sources_1/ip/data_convert_1_1/data_convert_1_1.xci"
#    "$(current_path)/TJPU/sources_1/ip/fifo_four2three/fifo_four2three.xci"
#    "$(current_path)/TJPU/sources_1/ip/FIFO_256_2048/FIFO_256_2048.xci"
#    "$(current_path)/TJPU/sources_1/ip/PE_switch/PE_switch.xci"
#    "$(current_path)/TJPU/sources_1/ip/Top_switch/Top_switch.xci"
#    "$(current_path)/TJPU/sources_1/new/BIAS_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Para.v"
#    "$(current_path)/TJPU/sources_1/new/Bias_ram.v"
#    "$(current_path)/TJPU/sources_1/new/Cin_Convert.v"
#    "$(current_path)/TJPU/sources_1/new/Cin_Converter_test.v"
#    "$(current_path)/TJPU/sources_1/new/Compute_3_3.v"
#    "$(current_path)/TJPU/sources_1/new/Concat_32to8.v"
#    "$(current_path)/TJPU/sources_1/new/Concat_Scale.v"
#    "$(current_path)/TJPU/sources_1/new/Concat_Scale_Judge.v"
#    "$(current_path)/TJPU/sources_1/new/Concat_Zero.v"
#    "$(current_path)/TJPU/sources_1/new/Configurable_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Configurable_RAM.v"
#    "$(current_path)/TJPU/sources_1/new/Configurable_RAM_Norm.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_3_3.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_Bias.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_Norm.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_Scale.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_Zero.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_quan.v"
#    "$(current_path)/TJPU/sources_1/new/Conv_quan_control.v"
#    "$(current_path)/TJPU/sources_1/new/DMA_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Data_Convert.v"
#    "$(current_path)/TJPU/sources_1/new/Data_Convert_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Data_Convert_FIFO_128.v"
#    "$(current_path)/TJPU/sources_1/new/Data_Generate.v"
#    "$(current_path)/TJPU/sources_1/new/FIFO_Concat.v"
#    "$(current_path)/TJPU/sources_1/new/Four2three_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/In_Buffer.v"
#    "$(current_path)/TJPU/sources_1/new/Load_Weight_Bias.v"
#    "$(current_path)/TJPU/sources_1/new/Out_Buffer.v"
#    "$(current_path)/TJPU/sources_1/new/Padding_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Route_Read_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Route_Write_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Stride.v"
#    "$(current_path)/TJPU/sources_1/new/TJPU.v"
#    "$(current_path)/TJPU/sources_1/new/URAM_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Upsampling_Read_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/Upsampling_Write_FIFO.v"
#    "$(current_path)/TJPU/sources_1/new/accumulation.v"
#    "$(current_path)/TJPU/sources_1/new/add_simd.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_accumulation.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_eight_times_acc.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_four_times_acc.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_one_times_acc.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_sixteen_times_acc.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_thirty_two_times_acc.v"
#    "$(current_path)/TJPU/sources_1/new/channel_in_two_times_acc.v"
#    "$(current_path)/TJPU/sources_1/new/compare_maxpool.v"
#    "$(current_path)/TJPU/sources_1/new/compare_maxpool_1.v"
#    "$(current_path)/TJPU/sources_1/new/compute_1_1_mult.v"
#    "$(current_path)/TJPU/sources_1/new/compute_3_3_mult_add.v"
#    "$(current_path)/TJPU/sources_1/new/compute_control.v"
#    "$(current_path)/TJPU/sources_1/new/concat.v"
#    "$(current_path)/TJPU/sources_1/new/concat_read_fifo_1.v"
#    "$(current_path)/TJPU/sources_1/new/concat_read_fifo_2.v"
#    "$(current_path)/TJPU/sources_1/new/connect_final.v"
#    "$(current_path)/TJPU/sources_1/new/conv_2d.v"
#    "$(current_path)/TJPU/sources_1/new/conv_state.v"
#    "$(current_path)/TJPU/sources_1/new/four2three.v"
#    "$(current_path)/TJPU/sources_1/new/leakyrelu.v"
#    "$(current_path)/TJPU/sources_1/new/maxpool.v"
#    "$(current_path)/TJPU/sources_1/new/maxpool_read_fifo.v"
#    "$(current_path)/TJPU/sources_1/new/maxpool_write_fifo.v"
#    "$(current_path)/TJPU/sources_1/new/mult_dou_26_8.v"
#    "$(current_path)/TJPU/sources_1/new/mult_dou_8_8.v"
#    "$(current_path)/TJPU/sources_1/new/mult_simd.v"
#    "$(current_path)/TJPU/sources_1/new/padding.v"
#    "$(current_path)/TJPU/sources_1/new/reshape.v"
#    "$(current_path)/TJPU/sources_1/new/reshape_define.v"
#    "$(current_path)/TJPU/sources_1/new/reshape_instruction.v"
#    "$(current_path)/TJPU/sources_1/new/reshape_state.v"
#    "$(current_path)/TJPU/sources_1/new/route.v"
#    "$(current_path)/TJPU/sources_1/new/shift.v"
#    "$(current_path)/TJPU/sources_1/new/subz3_leakyrelu_addz3.v"
#    "$(current_path)/TJPU/sources_1/new/three2nine.v"
#    "$(current_path)/TJPU/sources_1/new/top_control.v"
#    "$(current_path)/TJPU/sources_1/new/upsampling.v"
#    "$(current_path)/TJPU/sources_1/new/top.v"
#    "$(current_path)/TJPU/sources_1/imports/Yolo_v4_regs.vho"
#    "$(current_path)/TJPU/sources_1/ip/test_FIFO/test_FIFO.xci"
#    "$(current_path)/TJPU/sources_1/ip/test_image/test_image.xci"
#    "$(current_path)/TJPU/sources_1/ip/test_weight/test_weight.xci"
#    "$(current_path)/TJPU/sources_1/sim/simulation_weight_feature_stream.v"
#    "$(current_path)/TJPU/sources_1/sim/TJPU_TB.v"
#    "$(current_path)/TJPU/sources_1/sim/TB_Split.v"
#    "$(current_path)/TJPU/sources_1/sim/TB_Upsample.v"
#    "$(current_path)/TJPU/sources_1/sim/TB_Maxpool.v"
#    "$(current_path)/TJPU/sources_1/sim/simulation_concat.v"
#    "$(current_path)/TJPU/sources_1/sim/TB_Reshape.v"
#    "$(current_path)/TJPU/name.tcl"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "$(current_path)/TJPU/sources_1/imports/Yolo_v4_regs_pkg.vhd" \
   "$(current_path)/TJPU/sources_1/imports/Yolo_v4_regs.vhd" \
   "$(current_path)/TJPU/sources_1/imports/dma_idle.v" \
   "$(current_path)/TJPU/sources_1/imports/dma_read.v" \
   "$(current_path)/TJPU/sources_1/imports/dma_read_ctrl.v" \
   "$(current_path)/TJPU/sources_1/imports/dma_write.v" \
   "$(current_path)/TJPU/sources_1/imports/dma_write_idle.v" \
   "$(current_path)/TJPU/sources_1/imports/dma_write_ctrl.v" \
   "$(current_path)/TJPU/sources_1/bd/system/system.bd" \
   "$(current_path)/TJPU/sources_1/ip/Top_switch_end/Top_switch_end.xci" \
   "$(current_path)/TJPU/sources_1/ip/end_reshape/end_reshape.xci" \
   "$(current_path)/TJPU/sources_1/ip/upsampling_fifo_write/upsampling_fifo_write.xci" \
   "$(current_path)/TJPU/sources_1/ip/mult_up/mult_up.xci" \
   "$(current_path)/TJPU/sources_1/ip/upsampling_fifo_1/upsampling_fifo_1.xci" \
   "$(current_path)/TJPU/sources_1/ip/upsampling_fifo_read/upsampling_fifo_read.xci" \
   "$(current_path)/TJPU/sources_1/ip/mult_upsample/mult_upsample.xci" \
   "$(current_path)/TJPU/sources_1/ip/max_polling_fifo_write/max_polling_fifo_write.xci" \
   "$(current_path)/TJPU/sources_1/ip/Buffer_2/Buffer_2.xci" \
   "$(current_path)/TJPU/sources_1/ip/Buffer_1/Buffer_1.xci" \
   "$(current_path)/TJPU/sources_1/ip/route_fifo_write/route_fifo_write.xci" \
   "$(current_path)/TJPU/sources_1/ip/route_fifo_read/route_fifo_read.xci" \
   "$(current_path)/TJPU/sources_1/ip/concat_fifo/concat_fifo.xci" \
   "$(current_path)/TJPU/sources_1/ip/mult_concat/mult_concat.xci" \
   "$(current_path)/TJPU/sources_1/ip/concat_mult_32_u32/concat_mult_32_u32.xci" \
   "$(current_path)/TJPU/sources_1/ip/add_32_u32_32/add_32_u32_32.xci" \
   "$(current_path)/TJPU/sources_1/ip/concat_fifo_read_2/concat_fifo_read_2.xci" \
   "$(current_path)/TJPU/sources_1/ip/concat_fifo_read_1/concat_fifo_read_1.xci" \
   "$(current_path)/TJPU/sources_1/ip/top_reshape/top_reshape.xci" \
   "$(current_path)/TJPU/sources_1/ip/stride_fifo/stride_fifo.xci" \
   "$(current_path)/TJPU/sources_1/ip/zero_point_adder/zero_point_adder.xci" \
   "$(current_path)/TJPU/sources_1/ip/sub_16_u8/sub_16_u8.xci" \
   "$(current_path)/TJPU/sources_1/ip/add_16_u8_16/add_16_u8_16.xci" \
   "$(current_path)/TJPU/sources_1/ip/mult_32_32/mult_32_32.xci" \
   "$(current_path)/TJPU/sources_1/ip/add_32_32/add_32_32.xci" \
   "$(current_path)/TJPU/sources_1/ip/fifo_1024_1024/fifo_1024_1024.xci" \
   "$(current_path)/TJPU/sources_1/ip/count_mult/count_mult.xci" \
   "$(current_path)/TJPU/sources_1/ip/Mult_26_8_34/Mult_26_8_34.xci" \
   "$(current_path)/TJPU/sources_1/ip/mult_8_8_16/mult_8_8_16.xci" \
   "$(current_path)/TJPU/sources_1/ip/Add_34_34/Add_34_34.xci" \
   "$(current_path)/TJPU/sources_1/ip/add_16_16/add_16_16.xci" \
   "$(current_path)/TJPU/sources_1/ip/block_fifo_256_1024/block_fifo_256_1024.xci" \
   "$(current_path)/TJPU/sources_1/ip/COMPUTE_3_3_WEIGHT_INS/COMPUTE_3_3_WEIGHT_INS.xci" \
   "$(current_path)/TJPU/sources_1/ip/bias_ram/bias_ram.xci" \
   "$(current_path)/TJPU/sources_1/ip/count_conv2d/count_conv2d.xci" \
   "$(current_path)/TJPU/sources_1/ip/data_convert_128/data_convert_128.xci" \
   "$(current_path)/TJPU/sources_1/ip/data_convert_1_1/data_convert_1_1.xci" \
   "$(current_path)/TJPU/sources_1/ip/fifo_four2three/fifo_four2three.xci" \
   "$(current_path)/TJPU/sources_1/ip/FIFO_256_2048/FIFO_256_2048.xci" \
   "$(current_path)/TJPU/sources_1/ip/PE_switch/PE_switch.xci" \
   "$(current_path)/TJPU/sources_1/ip/Top_switch/Top_switch.xci" \
   "$(current_path)/TJPU/sources_1/new/BIAS_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Para.v" \
   "$(current_path)/TJPU/sources_1/new/Bias_ram.v" \
   "$(current_path)/TJPU/sources_1/new/Cin_Convert.v" \
   "$(current_path)/TJPU/sources_1/new/Cin_Converter_test.v" \
   "$(current_path)/TJPU/sources_1/new/Compute_3_3.v" \
   "$(current_path)/TJPU/sources_1/new/Concat_32to8.v" \
   "$(current_path)/TJPU/sources_1/new/Concat_Scale.v" \
   "$(current_path)/TJPU/sources_1/new/Concat_Scale_Judge.v" \
   "$(current_path)/TJPU/sources_1/new/Concat_Zero.v" \
   "$(current_path)/TJPU/sources_1/new/Configurable_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Configurable_RAM.v" \
   "$(current_path)/TJPU/sources_1/new/Configurable_RAM_Norm.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_3_3.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_Bias.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_Norm.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_Scale.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_Zero.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_quan.v" \
   "$(current_path)/TJPU/sources_1/new/Conv_quan_control.v" \
   "$(current_path)/TJPU/sources_1/new/DMA_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Data_Convert.v" \
   "$(current_path)/TJPU/sources_1/new/Data_Convert_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Data_Convert_FIFO_128.v" \
   "$(current_path)/TJPU/sources_1/new/Data_Generate.v" \
   "$(current_path)/TJPU/sources_1/new/FIFO_Concat.v" \
   "$(current_path)/TJPU/sources_1/new/Four2three_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/In_Buffer.v" \
   "$(current_path)/TJPU/sources_1/new/Load_Weight_Bias.v" \
   "$(current_path)/TJPU/sources_1/new/Out_Buffer.v" \
   "$(current_path)/TJPU/sources_1/new/Padding_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Route_Read_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Route_Write_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Stride.v" \
   "$(current_path)/TJPU/sources_1/new/TJPU.v" \
   "$(current_path)/TJPU/sources_1/new/URAM_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Upsampling_Read_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/Upsampling_Write_FIFO.v" \
   "$(current_path)/TJPU/sources_1/new/accumulation.v" \
   "$(current_path)/TJPU/sources_1/new/add_simd.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_accumulation.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_eight_times_acc.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_four_times_acc.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_one_times_acc.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_sixteen_times_acc.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_thirty_two_times_acc.v" \
   "$(current_path)/TJPU/sources_1/new/channel_in_two_times_acc.v" \
   "$(current_path)/TJPU/sources_1/new/compare_maxpool.v" \
   "$(current_path)/TJPU/sources_1/new/compare_maxpool_1.v" \
   "$(current_path)/TJPU/sources_1/new/compute_1_1_mult.v" \
   "$(current_path)/TJPU/sources_1/new/compute_3_3_mult_add.v" \
   "$(current_path)/TJPU/sources_1/new/compute_control.v" \
   "$(current_path)/TJPU/sources_1/new/concat.v" \
   "$(current_path)/TJPU/sources_1/new/concat_read_fifo_1.v" \
   "$(current_path)/TJPU/sources_1/new/concat_read_fifo_2.v" \
   "$(current_path)/TJPU/sources_1/new/connect_final.v" \
   "$(current_path)/TJPU/sources_1/new/conv_2d.v" \
   "$(current_path)/TJPU/sources_1/new/conv_state.v" \
   "$(current_path)/TJPU/sources_1/new/four2three.v" \
   "$(current_path)/TJPU/sources_1/new/leakyrelu.v" \
   "$(current_path)/TJPU/sources_1/new/maxpool.v" \
   "$(current_path)/TJPU/sources_1/new/maxpool_read_fifo.v" \
   "$(current_path)/TJPU/sources_1/new/maxpool_write_fifo.v" \
   "$(current_path)/TJPU/sources_1/new/mult_dou_26_8.v" \
   "$(current_path)/TJPU/sources_1/new/mult_dou_8_8.v" \
   "$(current_path)/TJPU/sources_1/new/mult_simd.v" \
   "$(current_path)/TJPU/sources_1/new/padding.v" \
   "$(current_path)/TJPU/sources_1/new/reshape.v" \
   "$(current_path)/TJPU/sources_1/new/reshape_define.v" \
   "$(current_path)/TJPU/sources_1/new/reshape_instruction.v" \
   "$(current_path)/TJPU/sources_1/new/reshape_state.v" \
   "$(current_path)/TJPU/sources_1/new/route.v" \
   "$(current_path)/TJPU/sources_1/new/shift.v" \
   "$(current_path)/TJPU/sources_1/new/subz3_leakyrelu_addz3.v" \
   "$(current_path)/TJPU/sources_1/new/three2nine.v" \
   "$(current_path)/TJPU/sources_1/new/top_control.v" \
   "$(current_path)/TJPU/sources_1/new/upsampling.v" \
   "$(current_path)/TJPU/sources_1/new/top.v" \
   "$(current_path)/TJPU/sources_1/imports/Yolo_v4_regs.vho" \
   "$(current_path)/TJPU/sources_1/ip/test_FIFO/test_FIFO.xci" \
   "$(current_path)/TJPU/sources_1/ip/test_image/test_image.xci" \
   "$(current_path)/TJPU/sources_1/ip/test_weight/test_weight.xci" \
   "$(current_path)/TJPU/sources_1/sim/simulation_weight_feature_stream.v" \
   "$(current_path)/TJPU/sources_1/sim/TJPU_TB.v" \
   "$(current_path)/TJPU/sources_1/sim/TB_Split.v" \
   "$(current_path)/TJPU/sources_1/sim/TB_Upsample.v" \
   "$(current_path)/TJPU/sources_1/sim/TB_Maxpool.v" \
   "$(current_path)/TJPU/sources_1/sim/simulation_concat.v" \
   "$(current_path)/TJPU/sources_1/sim/TB_Reshape.v" \
   "$(current_path)/TJPU/name.tcl" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "vu9p_pcie_416"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "vu9p_pcie_416.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcvu9p-fsgd2104-2LV-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "compxlib.modelsim_compiled_library_dir" -value "E:/modelsim/vivado2020_2_lib" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcvu9p-fsgd2104-2LV-e" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "49" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "49" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "49" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "49" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "49" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "49" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "49" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/sources_1/imports/Yolo_v4_regs_pkg.vhd" ]\
 [file normalize "${origin_dir}/sources_1/imports/Yolo_v4_regs.vhd" ]\
 [file normalize "${origin_dir}/sources_1/imports/dma_idle.v" ]\
 [file normalize "${origin_dir}/sources_1/imports/dma_read.v" ]\
 [file normalize "${origin_dir}/sources_1/imports/dma_read_ctrl.v" ]\
 [file normalize "${origin_dir}/sources_1/imports/dma_write.v" ]\
 [file normalize "${origin_dir}/sources_1/imports/dma_write_idle.v" ]\
 [file normalize "${origin_dir}/sources_1/imports/dma_write_ctrl.v" ]\
 [file normalize "${origin_dir}/sources_1/bd/system/system.bd" ]\
 [file normalize "${origin_dir}/sources_1/ip/Top_switch_end/Top_switch_end.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/end_reshape/end_reshape.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/upsampling_fifo_write/upsampling_fifo_write.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/mult_up/mult_up.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/upsampling_fifo_1/upsampling_fifo_1.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/upsampling_fifo_read/upsampling_fifo_read.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/mult_upsample/mult_upsample.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/max_polling_fifo_write/max_polling_fifo_write.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/Buffer_2/Buffer_2.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/Buffer_1/Buffer_1.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/route_fifo_write/route_fifo_write.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/route_fifo_read/route_fifo_read.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/concat_fifo/concat_fifo.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/mult_concat/mult_concat.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/concat_mult_32_u32/concat_mult_32_u32.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/add_32_u32_32/add_32_u32_32.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/concat_fifo_read_2/concat_fifo_read_2.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/concat_fifo_read_1/concat_fifo_read_1.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/top_reshape/top_reshape.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/stride_fifo/stride_fifo.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/zero_point_adder/zero_point_adder.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/sub_16_u8/sub_16_u8.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/add_16_u8_16/add_16_u8_16.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/mult_32_32/mult_32_32.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/add_32_32/add_32_32.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/fifo_1024_1024/fifo_1024_1024.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/count_mult/count_mult.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/Mult_26_8_34/Mult_26_8_34.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/mult_8_8_16/mult_8_8_16.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/Add_34_34/Add_34_34.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/add_16_16/add_16_16.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/block_fifo_256_1024/block_fifo_256_1024.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/COMPUTE_3_3_WEIGHT_INS/COMPUTE_3_3_WEIGHT_INS.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/bias_ram/bias_ram.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/count_conv2d/count_conv2d.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/data_convert_128/data_convert_128.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/data_convert_1_1/data_convert_1_1.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/fifo_four2three/fifo_four2three.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/FIFO_256_2048/FIFO_256_2048.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/PE_switch/PE_switch.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/Top_switch/Top_switch.xci" ]\
 [file normalize "${origin_dir}/sources_1/new/BIAS_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Para.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Bias_ram.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Cin_Convert.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Cin_Converter_test.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Compute_3_3.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Concat_32to8.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Concat_Scale.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Concat_Scale_Judge.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Concat_Zero.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Configurable_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Configurable_RAM.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Configurable_RAM_Norm.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_3_3.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_Bias.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_Norm.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_Scale.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_Zero.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_quan.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Conv_quan_control.v" ]\
 [file normalize "${origin_dir}/sources_1/new/DMA_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Data_Convert.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Data_Convert_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Data_Convert_FIFO_128.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Data_Generate.v" ]\
 [file normalize "${origin_dir}/sources_1/new/FIFO_Concat.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Four2three_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/In_Buffer.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Load_Weight_Bias.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Out_Buffer.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Padding_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Route_Read_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Route_Write_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Stride.v" ]\
 [file normalize "${origin_dir}/sources_1/new/TJPU.v" ]\
 [file normalize "${origin_dir}/sources_1/new/URAM_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Upsampling_Read_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/Upsampling_Write_FIFO.v" ]\
 [file normalize "${origin_dir}/sources_1/new/accumulation.v" ]\
 [file normalize "${origin_dir}/sources_1/new/add_simd.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_accumulation.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_eight_times_acc.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_four_times_acc.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_one_times_acc.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_sixteen_times_acc.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_thirty_two_times_acc.v" ]\
 [file normalize "${origin_dir}/sources_1/new/channel_in_two_times_acc.v" ]\
 [file normalize "${origin_dir}/sources_1/new/compare_maxpool.v" ]\
 [file normalize "${origin_dir}/sources_1/new/compare_maxpool_1.v" ]\
 [file normalize "${origin_dir}/sources_1/new/compute_1_1_mult.v" ]\
 [file normalize "${origin_dir}/sources_1/new/compute_3_3_mult_add.v" ]\
 [file normalize "${origin_dir}/sources_1/new/compute_control.v" ]\
 [file normalize "${origin_dir}/sources_1/new/concat.v" ]\
 [file normalize "${origin_dir}/sources_1/new/concat_read_fifo_1.v" ]\
 [file normalize "${origin_dir}/sources_1/new/concat_read_fifo_2.v" ]\
 [file normalize "${origin_dir}/sources_1/new/connect_final.v" ]\
 [file normalize "${origin_dir}/sources_1/new/conv_2d.v" ]\
 [file normalize "${origin_dir}/sources_1/new/conv_state.v" ]\
 [file normalize "${origin_dir}/sources_1/new/four2three.v" ]\
 [file normalize "${origin_dir}/sources_1/new/leakyrelu.v" ]\
 [file normalize "${origin_dir}/sources_1/new/maxpool.v" ]\
 [file normalize "${origin_dir}/sources_1/new/maxpool_read_fifo.v" ]\
 [file normalize "${origin_dir}/sources_1/new/maxpool_write_fifo.v" ]\
 [file normalize "${origin_dir}/sources_1/new/mult_dou_26_8.v" ]\
 [file normalize "${origin_dir}/sources_1/new/mult_dou_8_8.v" ]\
 [file normalize "${origin_dir}/sources_1/new/mult_simd.v" ]\
 [file normalize "${origin_dir}/sources_1/new/padding.v" ]\
 [file normalize "${origin_dir}/sources_1/new/reshape.v" ]\
 [file normalize "${origin_dir}/sources_1/new/reshape_define.v" ]\
 [file normalize "${origin_dir}/sources_1/new/reshape_instruction.v" ]\
 [file normalize "${origin_dir}/sources_1/new/reshape_state.v" ]\
 [file normalize "${origin_dir}/sources_1/new/route.v" ]\
 [file normalize "${origin_dir}/sources_1/new/shift.v" ]\
 [file normalize "${origin_dir}/sources_1/new/subz3_leakyrelu_addz3.v" ]\
 [file normalize "${origin_dir}/sources_1/new/three2nine.v" ]\
 [file normalize "${origin_dir}/sources_1/new/top_control.v" ]\
 [file normalize "${origin_dir}/sources_1/new/upsampling.v" ]\
 [file normalize "${origin_dir}/sources_1/new/top.v" ]\
 [file normalize "${origin_dir}/sources_1/imports/Yolo_v4_regs.vho" ]\
]
set imported_files [import_files -fileset sources_1 $files]

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse system.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../vu9p_pcie_416.gen/sources_1/bd/system/hdl/system_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse system.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "imports/Yolo_v4_regs_pkg.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "imports/Yolo_v4_regs.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/system.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "Top_switch_end/Top_switch_end.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "end_reshape/end_reshape.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "upsampling_fifo_write/upsampling_fifo_write.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "mult_up/mult_up.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "upsampling_fifo_1/upsampling_fifo_1.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "upsampling_fifo_read/upsampling_fifo_read.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "mult_upsample/mult_upsample.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "max_polling_fifo_write/max_polling_fifo_write.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "Buffer_2/Buffer_2.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "Buffer_1/Buffer_1.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "route_fifo_write/route_fifo_write.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "route_fifo_read/route_fifo_read.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "concat_fifo/concat_fifo.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "mult_concat/mult_concat.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "concat_mult_32_u32/concat_mult_32_u32.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "add_32_u32_32/add_32_u32_32.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "concat_fifo_read_2/concat_fifo_read_2.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "concat_fifo_read_1/concat_fifo_read_1.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "top_reshape/top_reshape.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "stride_fifo/stride_fifo.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "zero_point_adder/zero_point_adder.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "sub_16_u8/sub_16_u8.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "add_16_u8_16/add_16_u8_16.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "mult_32_32/mult_32_32.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "add_32_32/add_32_32.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "fifo_1024_1024/fifo_1024_1024.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "count_mult/count_mult.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "Mult_26_8_34/Mult_26_8_34.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "mult_8_8_16/mult_8_8_16.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "Add_34_34/Add_34_34.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "add_16_16/add_16_16.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "block_fifo_256_1024/block_fifo_256_1024.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "COMPUTE_3_3_WEIGHT_INS/COMPUTE_3_3_WEIGHT_INS.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "bias_ram/bias_ram.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "count_conv2d/count_conv2d.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "data_convert_128/data_convert_128.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "data_convert_1_1/data_convert_1_1.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "fifo_four2three/fifo_four2three.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "FIFO_256_2048/FIFO_256_2048.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "PE_switch/PE_switch.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "Top_switch/Top_switch.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "imports/Yolo_v4_regs.vho"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL Template" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcvu9p-fsgd2104-2LV-e" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/sources_1/ip/test_FIFO/test_FIFO.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/test_image/test_image.xci" ]\
 [file normalize "${origin_dir}/sources_1/ip/test_weight/test_weight.xci" ]\
 [file normalize "${origin_dir}/sources_1/sim/simulation_weight_feature_stream.v" ]\
 [file normalize "${origin_dir}/sources_1/sim/TJPU_TB.v" ]\
 [file normalize "${origin_dir}/sources_1/sim/TB_Split.v" ]\
 [file normalize "${origin_dir}/sources_1/sim/TB_Upsample.v" ]\
 [file normalize "${origin_dir}/sources_1/sim/TB_Maxpool.v" ]\
 [file normalize "${origin_dir}/sources_1/sim/simulation_concat.v" ]\
 [file normalize "${origin_dir}/sources_1/sim/TB_Reshape.v" ]\
]
set imported_files [import_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
set file "test_FIFO/test_FIFO.xci"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "test_image/test_image.xci"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "test_weight/test_weight.xci"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "TJPU_TB" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/name.tcl" ]\
]
set imported_files [import_files -fileset utils_1 $files]

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "vu9p_pcie_416.srcs/name.tcl"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu9p-fsgd2104-2LV-e -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcvu9p-fsgd2104-2LV-e" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvu9p-fsgd2104-2LV-e -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcvu9p-fsgd2104-2LV-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.tcl.pre" -value "$proj_dir/vu9p_pcie_416.srcs/name.tcl" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
